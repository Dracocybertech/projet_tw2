
<!DOCTYPE html>
<html lang="fr" dir="ltr">





	<head>

    <style>
      body {
          background-image: url('assets/img/nature.jpg');
          background-size: cover;
          display: flex;
          align-items: center;
          justify-content: center;
          flex-direction: column;
          height: 50%;
      }

      .container {
          background-color: rgba(255, 255, 255, 0.8);
          padding: 20px;
          border-radius: 10px;
      }


      .left-column {
          width: 400px;
          height: 500px;
          overflow-y: auto;
      }

      .right-column {
          width: 800px;
          display: flex;
          flex-direction: column;
      }

      .top-right {
          width: 100%;
          height: 200px;
          background-image: url('assets/img/nature.jpg');
          background-size: cover;
      }

      .bottom-right {
          width: 100%;
          height: 100%;
          display: flex;
          align-items: center;
          justify-content: center;
      }

      .character-list {
          width: 100%;
          display: flex;
          flex-direction: column;
      }

      .character {
          display: flex;
          align-items: center;
          margin-bottom: 10px;
      }

      .character-image {
          width: 50px;
          height: 50px;
          background-size: cover;
          margin-right: 10px;
      }

      .character-info {
          display: flex;
          flex-direction: column;
      }

      .character-name {
          font-size: 18px;
          font-weight: bold;
          margin-bottom: 5px;
      }

      .character-stats {
          font-size: 14px;
          margin-bottom: 5px;
      }

      .invocation-table {
          width: 500px;
          border-collapse: collapse;
      }

      .invocation-table td,
      .invocation-table th {
          border: 1px solid #ddd;
          padding: 8px;
      }

      .invocation-table tr:nth-child(even) {
          background-color: #f2f2f2;
      }

      .invocation-table th {
          padding-top: 0px;
          padding-bottom: 12px;
          text-align: left;
          background-color: #4CAF50;
          color: white;
      }
  </style>




		<title>Gold</title>
		<script>
			window.addEventListener( 'load', ev => {
				goldPS=1;
				gold=100;
				ObjInterval = null,
				totalGold = document.querySelector( "#totalGold" ),
				totalGold.textContent = gold;
				function augmenter(){

					if (gold + goldPS <= Number.MAX_VALUE){
						gold += goldPS;
						totalGold.textContent = gold;
					} else if (ObjInterval){
						clearInterval(ObjInterval);
						gold = Number.MAX_VALUE;
					}
				}
				ObjInterval = setInterval(augmenter, 1000, gold, goldPS);
			});
		</script>


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="description">
    <meta content="" name="keywords">
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <!-- Favicons -->
    <link href="assets/img/favicon.png" rel="icon">

    <!-- Vendor CSS Files -->
    <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="assets/css/main.css" rel="stylesheet">
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"> </script>


	</head>
	<body>

    <div class="container">
      <div class="left-column">
          <div class="character-list">
            <p id="totalGold"></p>
            <input id="1gold" type="button" value="+1 g/s" onclick="goldPS=goldPS+1">

            <div id="app">
              <button style="background: var(--color-primary);border: 0; color: #fff; border-radius: 20px; width:20px;" v-on:click="invocationHeros()">+</button>
              <p> Appuyer sur le bouton pour déclencher une invocation. Inspecter la page pour voir les console.log. </p>
            </div>

            
      </div>

      
      <!-- <div class="right-column">
         
          <div class="bottom-right">
              <table class="invocation-table">
                  <thead>
                      <div class="top-right"></div>
                  </thead>
                  <tr>
                      <th>Invocation</th>
                      <th>Gold</th>
                      <th>Diamants</th>
                      <th>Gold/s</th>
                      <th>Diamants/s</th>
                  </tr>
                  <tr>
                      <td>
                          <div class="character-image" style="background-image: url('assets/img/stickman.jpg')"></div>
                          <div>50</div>
                      </td>
                      <td>100</td>
                      <td>50</td>
                      <td>1</td>
                      <td>0.5</td>
                  </tr>
              </table>
          </div>
      </div> -->
  </div>

  <div id="joueur"> Joueur {nomjoueur} </div>

  <div id ="affichageHeros" class="tabHeros">
    <ul>
      <liste_heros v-for="heros in herosObtenus" v-bind:personnage="heros.id_hero" v-bind:niveau="heros.niveau"/>

      <!-- v-bind:element="hero.goldpersec" v-bind:element="hero.diamondspersec" -->
    </ul>

  </div>




    <!-- <div class="character-image" style="background-image: url('assets/img/stickman.jpg')"></div>
      <div class="character-info">
            <div class="character">
            <div class="character-name">Personnage 1</div>
            <div class="character-stats">Niveau: 10</div>
            <div class="character-stats">Gold/s: 100</div>
            <div class="character-stats">Diamants/s: 50</div>
      </div>
    </div> -->
</div>


  <!-- Vendor JS Files -->
  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  <!-- Template Main JS File -->
  <script src="assets/js/main.js"></script>
	</body>
</html>



<script>


Vue.component("liste_heros",{
				
				template: `<table border="1pt" width="500px">
						<tr>
              
							  <td>
                <div class="character-image" style="background-image: url('assets/img/stickman.jpg')"></div>
                {{ personnage }}
                </td>
							<td>{{ niveau }}</td>
              
						</tr>
					</table>`,
        
				props: ["personnage", "niveau"] //, "goldpersec","diamondspersec" //<td>{{ goldpersec }}</td> <td>{{ diamondspersec }}</td>
			})


  // const liste_heros = new Vue({
  //       el:"#affichageHeros",
  //       data: function() {

  //           //heros1:["personnage1",1,50,20];
  //           //heros2:["personnage2",3,40,30];
            
          
  //         return {
            
  //           heroes:[["personnage1",1,50,20],["personnage2",3,40,30],["personnage3",3,40,30]]

  //         }
            
  //       }
  // })


/*

  Vue.component('listecart',{ //A garder en commentaire car j'en aurai besoin pour plus tard

  template:`<li v-bind:id="'item_'+id">
      <button style="background: var(--color-primary);border: 0; color: #fff; border-radius: 20px; width:20px;" v-on:click="addItem()">+</button>  {{quantity}} <button style="background: var(--color-primary);border: 0; color: #fff; border-radius: 20px; width:20px;" v-on:click="removeItem()">-</button>
      &#215; {{name }} ($ {{price}} each)
     </li>`,
  props:["id", "quantity", "name", "price"],

  methods:{
          addItem: function() {
          console.log(this.id);
            app.addItem(this.id);
          },
          removeItem: function() {
          console.log(this.id);
            app.removeItem(this.id);
          },

          estVide: function() {
            app.estVide();
          },

        },

})*/

/*$(document).ready(function(){
  $.ajax({
    type: 'GET',
    url: '/cart/initialisationHerosObtenus',
    success: function(received) {
    console.log("Pweeeet initialisationHerosObtenus");
    console.log(received);
    joueur.herosObtenus = received; //Sauvegarde des héros de la db dans herosObtenus
   },
    error: function() {
      alert('Problème AJAX');
    }
  });
});*/


const joueur = new Vue({ //Vue du joueur
        el:"#affichageHeros",
        methods:{
          possedeHeros: function(heros) {//Fonction qui renvoie true si herosObtenus contient heros
            console.log("PWET possedeHeros");
            for (const herosObtenu of joueur.herosObtenus) {//Parcours de herosObtenus
              console.log(herosObtenu);
              console.log("herosObtenu.id_hero : "+herosObtenu['id_hero']);
              console.log("heros.id_hero : "+heros['id_hero']);
              if(herosObtenu['id_hero'] == heros['id_hero']) {//Comparaison des id qui sont uniques
                return true;
              }
            }
            return false;
          }
        },
        data:{
          herosObtenus:[],
        },
  });

$.ajax({
  type: 'GET',
  url: '/cart/initialisationHerosObtenus',
  success: function(received) {
  console.log("Pweeeet initialisationHerosObtenus");
  console.log(received);
  joueur.herosObtenus = received; //Sauvegarde des héros de la db dans herosObtenus
   },
    error: function() {
      alert('Problème AJAX');
    }
});

const app = new Vue({ //Vue qui gère les invocations de héros
        el:"#app",
        methods:{
          invocationHeros: function() { //Invocation de heros
             console.log("Pweeeet debut");
             console.log(totalGold.textContent);

             $.ajax({
               type: 'POST',
               url: '/cart/argentSuffisant',//Vérifie si le joueur a assez d'argent pour faire une invocation
               data: "argent="+totalGold.textContent,//Envoie de l'argent
               success: function(received) {
                 console.log("Pweeeet argentSuffisant");
                 console.log(received);
                 if (received) { //Si on a assez d'argent
                    totalGold.textContent = totalGold.textContent - 100;//A changer
                    let rarete = "";
                    $.get("/cart/rareteRandom", function (data, status, xhr) {//Obtention d'une rareté au hasard
                        if (status == "error") {
                          alert('erreur' + xhr.status + " " + xhr.statusText);
                        } else {
                            console.log("data : "+data);
                            rarete = data; //Sauvegarde de la rareté obtenue
                            console.log("rarete finale : "+rarete);
                            $.ajax({
                            type: 'POST',
                            url: '/cart/triParRarete',//Obtention d'un héros au hasard qui a la rareté demandée
                            data:"rarete="+rarete,//Envoie de la rareté
                            success: function(received) {
                              console.log("Pweeeet Fin triParRarete");
                              console.log(received);
                              let heros = received; //Sauvegarde du héros
                              console.log(joueur.possedeHeros(heros));
                              if (joueur.possedeHeros(heros)) { //Si le joueur possède déjà le héros
                                console.log("Remboursement en cours."); //On rembourse le joueur d'un montant X selon la rareté
                              }
                              else { //Si le joueur ne possède pas le héros
                                joueur.herosObtenus.push(heros); //On ajoute le héros à herosObtenus
                                console.log("Ajout d'un heros.");
                                console.log(joueur.herosObtenus);
                              }
                            },
                            error: function() {
                              alert('Problème AJAX');
                            }
                            });
                          };
                      });
                 }
                 else {
                    window.alert("Il n'y a pas assez d'argent pour acheter un heros ! Attendez d'avoir 100 golds."); //Message d'alerte pour signaler au joueur qu'il n'a pas assez d'argent
                 }
               },
               error: function() {
                 alert('Problème AJAX');
               }
            });

          },
        },
    })

</script>

<!--<script>

function invocationHeros(){
      console.log("invocationHeros");
      console.log(totalGold.textContent);
      };

</script>-->


</html>
